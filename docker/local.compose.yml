services:

  sp2any-entrypoint:
    container_name: sp2any-entrypoint
    build:
      dockerfile: docker/frontend.Dockerfile
      context: ..
    volumes:
      - ./template.nginx.conf:/etc/nginx/templates/nginx.conf.template
      - ./../frontend/dist:/usr/share/nginx/html
    environment:
      NGINX_HOST: localhost
      NGINX_PORT: 8080
      SP2ANY_API_HOST: localhost
    network_mode: host
    # ports:
    #   - 8080:8080

  sp2any-api:
    container_name: sp2any-api
    build:
      dockerfile: docker/api.Dockerfile
      context: ..
      args:
        PATH_TO_EXEC: ../target/debug/sp2any
    environment:
      JWT_APPLICATION_SECRET: "${JWT_APPLICATION_SECRET}"
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/sp2any"
      APPLICATION_USER_SECRETS: "${APPLICATION_USER_SECRETS}"
      DISCORD_STATUS_MESSAGE_UPDATER_AVAILABLE: "${DISCORD_STATUS_MESSAGE_UPDATER_AVAILABLE-false}"
      DISCORD_OAUTH_CLIENT_ID: "${DISCORD_OAUTH_CLIENT_ID}"
      DISCORD_OAUTH_CLIENT_SECRET: "${DISCORD_OAUTH_CLIENT_SECRET}"
      ROCKET_ADDRESS: "0.0.0.0"
      ROCKET_PORT: 8000
    network_mode: host
    # ports:
    #   - 8000:8000

  sp2any-db:
    image: postgres:17-alpine
    container_name: sp2any-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sp2any
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - sp2any-data:/var/lib/postgresql/data
    restart: "on-failure:2"
    network_mode: host
    # ports:
    #   - 5432:5432

volumes:
  sp2any-data:
    name: sp2any-data
